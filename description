

### **Технічна задача: Розробка застосунку "Packer's Assistant" (Версія 2.0)**

**Назва проєкту:** Packer's Assistant (Асистент Пакувальника)

**Дата:** 17.09.2024

**Автор:** Boris

#### **1. Загальний опис та мета**

**Packer's Assistant** — це спеціалізований десктопний застосунок, створений для оптимізації та контролю процесу збору замовлень на складі. Його головна мета — усунути людські помилки (пересортування, недовкладення) шляхом інтерактивної верифікації кожного товару через сканування штрих-кодів.

**Основний робочий процес:**
1.  **Завантаження:** Користувач (менеджер складу) завантажує в програму готовий пакувальний лист у форматі **`.xlsx`**.
2.  **Генерація та друк:** Програма аналізує лист, групує товари за номерами замовлень і генерує унікальні баркоди для кожного замовлення. Ці баркоди роздруковуються для наклеювання на пакунки.
3.  **Пакування:** Пакувальник використовує застосунок в інтерактивному режимі для сканування пакунків та товарів, що гарантує 100% точність збору.

#### **2. Детальні вимоги**

##### **Частина 1: Обробка пакувального листа та генерація баркодів**

**1.1. Вхідні дані (пакувальний лист):**
* Користувач завантажує файл **`.xlsx`** через інтерфейс програми.
* **Вимоги до парсингу:**
    * Програма повинна коректно зчитувати дані з першого аркуша (`sheet`) Excel-файлу.
    * **Очікувані назви колонок:** `Order_Number`, `SKU`, `Product_Name`, `Quantity`. Розробнику слід передбачити можливість, що назви можуть трохи відрізнятися (наприклад, `Order #` замість `Order_Number`), і реалізувати механізм гнучкого зіставлення або вимагати від користувача приведення файлу до стандарту.
* **Обробка багаторядкових замовлень:** Система повинна автоматично групувати всі рядки, що належать до одного `Order_Number`, в єдине логічне замовлення.

**1.2. Генерація баркодів:**
* Після завантаження та аналізу файлу програма повинна згенерувати баркоди для кожного унікального `Order_Number`.
* **Вимоги до баркоду:**
    * **Формат:** `Code128`.
    * **Контент:** Номер замовлення (без символу `#` або інших спецсимволів).
    * **Формат файлу:** `PNG`.
* **Інтерфейс для друку:**
    * Після генерації відкривається нове вікно "Друк баркодів".
    * У цьому вікні відображається сторінка, готова до друку (наприклад, розмітка для аркуша А4), де кожен баркод супроводжується чітким номером замовлення.
    * Має бути кнопка "Надрукувати", яка викликає стандартний діалог друку операційної системи.

---

##### **Частина 2: Інтерактивний "Режим пакувальника"**

**(Ця частина залишається без змін)**

**2.1. Дизайн та елементи UI:**
* **Мінімалістичний інтерфейс:** Великі, контрастні шрифти, відсутність зайвих елементів. Управління — виключно через сканер.
* **Поле вводу для сканування замовлення:** Головний елемент, завжди у фокусі.
* **Таблиця складу замовлення:**
    * **Колонки:** `Назва товару`, `SKU`, `Потрібно`, `Зібрано`, `Статус`.
    * **Динамічне підсвічування рядків:**
        * **Жовтий:** Очікує збору.
        * **Зелений:** Позиція зібрана.
* **Поле вводу для сканування SKU:** Отримує фокус після сканування замовлення.
* **Зона для сповіщень:** Великий текст для повідомлень: "Неправильний SKU!", "Замовлення зібрано!".

**2.2. Логіка роботи та взаємодії:**
1.  **Початок:** Пакувальник бере пакет із наклеєним баркодом і сканує його.
2.  **Завантаження замовлення:** Програма знаходить замовлення у завантаженому пакувальному листі та виводить на екран список його SKU.
3.  **Сканування SKU:** Пакувальник бере товар і сканує його SKU.
    * **Успішне сканування:**
        * Значення "Зібрано" для відповідного SKU збільшується на 1.
        * Якщо `Зібрано == Потрібно`, рядок стає зеленим.
        * Програється короткий, приємний **звуковий сигнал**.
    * **Помилкове сканування** (не той SKU або зайва одиниця):
        * Програється гучний, різкий **звуковий сигнал помилки**.
        * На екрані з'являється велике червоне повідомлення "НЕПРАВИЛЬНИЙ ТОВАР!".
4.  **Завершення збору:**
    * Коли всі рядки в таблиці стають зеленими, програма видає переможний **звуковий сигнал**.
    * Відображається повідомлення "ЗАМОВЛЕННЯ #... ПОВНІСТЮ ЗІБРАНО!".
    * Екран автоматично очищується, готуючись до сканування наступного пакета.

#### **3. Технологічний стек (рекомендований)**

* **Мова:** Python 3.9+
* **GUI:** PySide6
* **Обробка даних:** Pandas
* **Робота з Excel:** **`openpyxl`** (має бути додано як залежність, `pandas` використовує його "під капотом").
* **Генерація баркодів:** `python-barcode`
* **Звук:** `PySide6.QtMultimedia`

#### **4. Критерії приймання**

1.  Застосунок успішно завантажує та парсить наданий **`.xlsx`** пакувальний лист.
2.  Програма коректно групує позиції за `Order_Number`.
3.  Функція генерації баркодів створює коректні зображення та надає зручний інтерфейс для їх друку.
4.  "Режим пакувальника" запускається і готовий до роботи одразу після завантаження листа.
5.  Сканування баркоду замовлення коректно відображає його склад.
6.  Система верифікації SKU працює бездоганно: правильно обробляє вірні сканування та чітко сигналізує про помилки.
7.  Завершення збору замовлення супроводжується чітким сповіщенням і автоматичним переходом до наступного.
8.  Весь процес пакування може бути виконаний без використання миші чи клавіатури (тільки за допомогою сканера).
